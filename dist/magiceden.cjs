"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const w=require("@wallet-standard/core"),l=require("./BrowserWalletNetworkMismatchError-CDpdIBHK.cjs"),n=require("./index-Dfqe4I64.cjs"),c=require("./index-BzOJ0WAr.cjs");async function o(){const{get:e}=w.getWallets(),t=e().find(r=>{var a,d;return r.name==="Magic Eden"&&((d=(a=r.features["sats-connect:"])==null?void 0:a.provider)==null?void 0:d.isMagicEden)===!0});if(!t)throw new n.BrowserWalletNotInstalledError("Magic Eden Wallet not installed");return t.features["sats-connect:"].provider}async function i(){if(typeof window>"u")throw new n.OrditSDKError("Cannot call this function outside a browser");try{const e=await o();return e.isMagicEden!==void 0&&e.isMagicEden===!0}catch(e){if(e instanceof n.BrowserWalletNotInstalledError)return!1;throw e}}async function u(e="mainnet"){if(!i())throw new n.BrowserWalletNotInstalledError("Magic Eden Wallet not installed");if(e!=="mainnet")throw new l.BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");return c.satsConnectWalletGetAddresses(o,e)}async function g(e,{finalize:s=!0,extractTx:t=!0,network:r,inputsToSign:a}={network:"mainnet",inputsToSign:[]}){if(!i())throw new n.BrowserWalletNotInstalledError("Magic Eden Wallet not installed");if(r!=="mainnet")throw new l.BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");return c.satsConnectWalletSignPsbt(o,e,{finalize:s,extractTx:t,network:r,inputsToSign:a})}async function f(e,s,t="mainnet"){if(!i())throw new n.BrowserWalletNotInstalledError("Magic Eden Wallet not installed");if(t!=="mainnet")throw new l.BrowserWalletNetworkMismatchError("Magic Eden Wallet only supports mainnet");return c.satsConnectWalletSignMessage(o,e,s,t)}exports.getAddresses=u;exports.isInstalled=i;exports.signMessage=f;exports.signPsbt=g;
