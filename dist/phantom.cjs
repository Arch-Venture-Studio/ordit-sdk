"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const r=require("./index-Dfqe4I64.cjs"),h=require("bitcoinjs-lib"),g=require("./BrowserWalletNetworkMismatchError-CDpdIBHK.cjs");function w(){if(typeof window>"u")throw new r.OrditSDKError("Cannot call this function outside a browser");return typeof window.phantom<"u"}function c(e="mainnet"){if(!w())throw new r.BrowserWalletNotInstalledError("Phantom Wallet not installed");if(e!=="mainnet")throw new g.BrowserWalletNetworkMismatchError("Phantom Wallet only supports mainnet")}async function m(e="mainnet"){c(e);const i=await window.phantom.bitcoin.requestAccounts(),o=[],t=[];if(i.forEach(n=>{t.push(n.purpose);const a=r.getAddressFormat(n.address,e);if(n.purpose==="ordinals"&&a!=="taproot")throw new r.OrditSDKError("No taproot address found");o.push({publicKey:n.publicKey,address:n.address,format:a})}),!t.includes("ordinals"))throw new r.OrditSDKError("No taproot address found");return o}async function p(e,i,o="mainnet"){c(o);try{const{signature:t}=await window.phantom.bitcoin.signMessage(i,new TextEncoder().encode(e));return{hex:r.Buffer.from(t).toString("hex"),base64:r.Buffer.from(t).toString("base64")}}catch(t){throw console.error("Sign message error",t),new r.OrditSDKError("Failed to sign message with Phantom Wallet")}}async function b(e,{finalize:i=!0,extractTx:o=!0,network:t,inputsToSign:n}={network:"mainnet",inputsToSign:[]}){if(c(t),o&&!i)throw new r.BrowserWalletExtractTxFromNonFinalizedPsbtError;const a=[];n.forEach(s=>{const{signingIndexes:l}=s;l.forEach(()=>{a.push(s)})});let f,d;try{f=await window.phantom.bitcoin.signPSBT(r.Buffer.from(e.toHex(),"hex"),{inputsToSign:a}),d=h.Psbt.fromBuffer(r.Buffer.from(f))}catch{throw new r.OrditSDKError("Failed to sign psbt with Phantom Wallet")}if(i&&a.forEach((s,l)=>{try{d.finalizeInput(l)}catch(u){throw console.error("Sign psbt error",u),new r.OrditSDKError("Failed to finalize input")}}),o)try{return{base64:null,hex:d.extractTransaction().toHex()}}catch(s){throw s instanceof Error&&s.message==="Not finalized"?new r.BrowserWalletExtractTxFromNonFinalizedPsbtError:new r.OrditSDKError("Failed to extract transaction from PSBT")}return{hex:d.toHex(),base64:d.toBase64()}}exports.getAddresses=m;exports.isInstalled=w;exports.signMessage=p;exports.signPsbt=b;
