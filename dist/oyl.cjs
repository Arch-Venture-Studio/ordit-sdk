"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const t=require("./index-Dfqe4I64.cjs"),d=require("bitcoinjs-lib");require("./index.cjs");const c=require("./BrowserWalletNetworkMismatchError-CDpdIBHK.cjs");function l(){if(typeof window>"u")throw new t.OrditSDKError("Cannot call this function outside a browser");return typeof window.oyl<"u"}function a(r="mainnet"){if(!l())throw new t.BrowserWalletNotInstalledError("Oyl Wallet not installed");if(r!=="mainnet")throw new c.BrowserWalletNetworkMismatchError("Oyl Wallet only supports mainnet")}async function w(r="mainnet"){a(r);const e=await window.oyl.getAddresses(),o=[];if(!e.taproot)throw new t.OrditSDKError("No taproot address found");return Object.keys(e).forEach(s=>{const n=s;o.push({publicKey:e[n].publicKey,address:e[n].address,format:t.getAddressFormat(e[n].address,r)})}),o}async function u(r,e,o="mainnet"){a(o);try{const{signature:s}=await window.oyl.signMessage({address:e,message:r});return{hex:t.Buffer.from(s,"base64").toString("hex"),base64:s}}catch(s){throw console.error("Sign message error",s),new t.OrditSDKError("Failed to sign message with Oyl Wallet")}}async function f(r,{finalize:e=!0,extractTx:o=!0,network:s}={network:"mainnet"}){if(a(s),o&&!e)throw new t.BrowserWalletExtractTxFromNonFinalizedPsbtError;let n;try{const{psbt:i}=await window.oyl.signPsbt({psbt:r.toHex(),finalize:e,broadcast:!1});n=d.Psbt.fromHex(i)}catch{throw new t.OrditSDKError("Failed to sign psbt with Oyl Wallet")}if(o)try{return{base64:null,hex:n.extractTransaction().toHex()}}catch(i){throw i instanceof Error&&i.message==="Not finalized"?new t.BrowserWalletExtractTxFromNonFinalizedPsbtError:new t.OrditSDKError("Failed to extract transaction from PSBT")}return{hex:n.toHex(),base64:n.toBase64()}}exports.getAddresses=w;exports.isInstalled=l;exports.signMessage=u;exports.signPsbt=f;
